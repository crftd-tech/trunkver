name: Build and Push

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "action.yml"
      - "README.md"
      - "website/**"

permissions:
  packages: write
  contents: write

jobs:
  generate-version:
    runs-on: ubuntu-latest
    outputs:
      trunkver: ${{ steps.trunkver.outputs.trunkver }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{repo}/releases/latest
          repo: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
      - name: Generate trunkver
        id: trunkver
        uses: crftd-tech/trunkver@main
        with:
          baseVersion: ${{ fromJson(steps.get_latest_release.outputs.data).tag_name }}
          prerelease: "true"
          increment: "patch"

  build-release:
    runs-on: ubuntu-latest
    needs: [generate-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version: 1.22
      - name: Build trunkver
        env:
          VERSION: ${{ needs.generate-version.outputs.trunkver }}
        run: |
          (
            unset GITHUB_SHA
            unset GITHUB_RUN_ID
            make test all spec "VERSION=${VERSION}"
          )
      - name: Create release
        id: release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2
        if: github.ref == 'refs/heads/main'
        with:
          name: ${{ needs.generate-version.outputs.trunkver }}
          tag_name: ${{ needs.generate-version.outputs.trunkver }}
          prerelease: true
          files: |
            out/trunkver*

  build-docker:
    runs-on: ubuntu-latest
    needs: [generate-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ghcr.io/crftd-tech/trunkver
          tags: |
            type=raw,value=${{ needs.generate-version.outputs.trunkver }}
            type=raw,value=latest

      - name: Log in to the Container registry
        uses: docker/login-action@6d4b68b490aef8836e8fb5e50ee7b3bdfa5894f0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          build-args: |
            VERSION=${{ needs.generate-version.outputs.trunkver }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Update the action.yml with the new image tag
        if: github.ref == 'refs/heads/main'
        run: |
          git pull origin --ff-only
          yq eval --inplace '.runs.image = "docker://ghcr.io/crftd-tech/trunkver:${{ needs.generate-version.outputs.trunkver }}"' action.yml
          git config --global user.email "bot@crftd.tech"
          git config --global user.name "crftd-bot"
          git add action.yml
          git commit -m "chore: Bump image tag in action.yml"
          git pull origin --rebase
          git push origin
